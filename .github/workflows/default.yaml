# Test the default branch, supported releases, and their PRs
name: GitHub CI tests

on:
  push:
    branches: [ "master", "v5" ]

  pull_request:
    branches: [ "master", "v5" ]

env:
  # empty except for pull_request events
  PULL_REQUEST_NUMBER: ${{ github.event.pull_request.number }}

  # We cannot use shallow clones because tests sometimes check for past
  # commits (e.g., to skip a particular test until the known bug is fixed) or
  # generate diffs against them (e.g., for `git diff --check`).
  CHECKOUT_FETCH_DEPTH: 1001

jobs:

  functionality-tests:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          fetch-depth: ${{ env.CHECKOUT_FETCH_DEPTH }}

      - name: Setup a nodejs environment
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - run: echo ./boostrap.sh
      - run: echo ./configure --with-openssl
      - run: echo make
      - run: sudo echo make install
      - run: sudo echo chown -R nobody:nogroup /usr/local/squid
      - run: ./test-suite/github-actions.sh check_pconn
      - run: ./test-suite/github-actions.sh check_busy_restart
      - run: ./test-suite/github-actions.sh check_proxy_collapsed_forwarding
      - run: ./test-suite/github-actions.sh check_proxy_update_headers_after_304
      - run: ./test-suite/github-actions.sh check_upgrade_protocols

# XXX: uncomment!
  # source-maintenance-tests:
  #   runs-on: ubuntu-22.04

  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: ${{ env.CHECKOUT_FETCH_DEPTH }}

  #     - run: ./test-suite/github-actions.sh check_diff
  #       if: success() || failure()

  #     - run: ./test-suite/github-actions.sh check_spelling
  #       if: success() || failure()

  #     - run: ./test-suite/github-actions.sh check_source_maintenance
  #       if: success() || failure()
  #       # TODO: Insist on developers running source-maintenance.sh instead.
  #       continue-on-error: true

  # build-tests:

  #   strategy:
  #     fail-fast: true
  #     matrix:
  #       os: [ ubuntu-22.04, macos-11 ]

  #   runs-on: ${{ matrix.os }}

  #   steps:

  #     - name: Install dependencies on macOS
  #       run: |
  #          brew install automake
  #       if: runner.os == 'macOS'

  #     - name: Checkout sources
  #       uses: actions/checkout@v3

  #     - run: ./bootstrap.sh # XXX: Remove
  #     - run: echo ./test-builds.sh



