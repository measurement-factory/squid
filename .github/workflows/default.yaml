# Test the default branch, supported releases, and their PRs
name: GitHub CI tests

on:
  push:
    branches: [ "master", "v5" ]

  pull_request:
    branches: [ "master", "v5" ]

env:
  # empty except for pull_request events
  PULL_REQUEST_NUMBER: ${{ github.event.pull_request.number }}

  # Shallow clones of Squid repository break tests that check for past commits
  # (e.g., to skip a particular test until the known bug is fixed) or generate
  # diffs against them (e.g., for `git diff --check`).
  CHECKOUT_FETCH_DEPTH: 1001

jobs:

  functionality-tests:
    runs-on: ubuntu-22.04

    steps:
      - name: Setup a nodejs environment
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install prerequisite packages
        run: |
          sudo apt-get update
          sudo apt-get install libtool-bin

      - name: Checkout Daft test framework
        uses: actions/checkout@v3
        with:
          repository: measurement-factory/daft
          path: extras/daft
          ref: 425e6704a19b0c7df1ed69e95a335e8bc402af84
          fetch-depth: 1

      - name: Checkout Squid tests that use the Daft framework
        uses: actions/checkout@v3
        with:
          repository: measurement-factory/squid-dafts
          path: extras/squid-dafts
          ref: 47151d3659e2f72f247c6af3a9680b007482843a
          fetch-depth: 1

      - name: Checkout Squid sources
        uses: actions/checkout@v3
        with:
          path: sources
          fetch-depth: ${{ env.CHECKOUT_FETCH_DEPTH }}

      - name: Setup Daft tests
        run: |
          ln -s ../daft/src extras/squid-dafts/src
          ln -s ../daft/node_modules extras/squid-dafts/node_modules
          cd extras/daft/ && npm install --no-save

      - run: ./bootstrap.sh
        working-directory: sources

      - run: ./configure --with-openssl
        working-directory: sources

      - run: make -j2
        working-directory: sources

      - run: |
          sudo make install
          sudo chown -R nobody:nogroup /usr/local/squid
        working-directory: sources

      - run: ./sources/test-suite/test-functionality.sh

      # Squid logs are not readable to actions/upload-artifact
      - name: Prep test logs
        if: success() || failure()
        run: sudo chmod -R a+rX /usr/local/squid

      - name: Publish test logs
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-logs
          path: |
            ./*.log
            /usr/local/squid/var/logs/overlord/

  source-maintenance-tests:
    runs-on: ubuntu-22.04

    steps:
      - name: Install prerequisite packages
        run: |
          sudo apt-get update
          sudo apt-get install astyle
          sudo apt-get install gperf
        if: runner.os == 'Linux'

      - uses: actions/checkout@v3
        with:
          fetch-depth: ${{ env.CHECKOUT_FETCH_DEPTH }}

      - run: ./test-suite/test-sources.sh check_diff
        if: success() || failure()

      - run: ./test-suite/test-sources.sh check_spelling
        if: success() || failure()

      - run: ./test-suite/test-sources.sh check_source_maintenance
        if: success() || failure()
        # TODO: Insist on developers running source-maintenance.sh instead.
        continue-on-error: true

  build-tests:

    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-22.04, macos-11 ]

    runs-on: ${{ matrix.os }}

    steps:

      - name: Install prerequisite Linux packages
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install libtool-bin
          sudo apt-get install libcppunit-dev

      - name: Install prerequisite macOS packages
        if: runner.os == 'macOS'
        run: |
           brew install automake
           brew install cppunit

      - name: Checkout sources
        uses: actions/checkout@v3

      - run: ./test-builds.sh
        # XXX: Fix distclean cleanup on macOS instead
        continue-on-error: runner.os == 'macOS'

